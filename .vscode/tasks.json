{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "ps",
      "detail": "View a list of all running containers for this project.",
      "type": "shell",
      "command": "docker compose ps"
    },
    {
      "label": "logs",
      "detail": "View logs for all services.",
      "type": "shell",
      "command": "docker compose logs --follow"
    },
    {
      "label": "exec",
      "detail": "Open an interactive shell in the specified container.",
      "type": "shell",
      "command": "docker compose exec \"${input:ship}\" /bin/sh",
      "windows": {
        "command": "docker compose exec \\\"${input:ship}\\\" /bin/sh"
      }
    },
    {
      "label": "build",
      "detail": "Build and tag a new Docker image from the Dockerfile.",
      "type": "shell",
      "command": "docker compose build"
    },
    {
      "label": "push",
      "detail": "Push the newly-built Docker image to a registry.",
      "type": "shell",
      "command": "docker compose push"
    },
    {
      "label": "pull",
      "detail": "Pull the latest Docker images for this project.",
      "type": "shell",
      "command": "docker compose pull"
    },
    {
      "label": "up",
      "detail": "Start the services in a development environment.",
      "type": "shell",
      "command": "FOCUS=${input:env} docker compose  -f docker-compose.yml -f docker-compose.live.yml up",
      "windows": {
        "command": "$env:FOCUS = '${input:env}'; docker compose up"
      }
    },
    {
      "label": "train",
      "detail": "Train a model.",
      "type": "shell",
      "command": "docker compose -f docker-compose.yml -f docker-compose.train.yml run -e FOCUS=${input:env} bot python3 trainer.py"
    },
    {
      "label": "i",
      "detail": "Prepare your data in various ways.",
      "type": "shell",
      "command": "docker compose run bot python3 -c \"import i; ${input:i}\"",
      "runOptions": {
        "instanceLimit": 3
      },
      "windows": {
        "command": "docker compose run bot python3 -c \\\"import i; ${input:i}\\\""
      }
    },
    {
      "label": "add",
      "detail": "Add the book/ directory to IPFS.",
      "type": "shell",
      "command": "docker compose exec -it ipfs ipfs add -r /book/public/ --pin=false --cid-version=1 --quieter",
    },
    {
      "label": "auto",
      "detail": "Turn on autopilot.",
      "type": "shell",
      "command": "docker compose up -d"
    },
    {
      "label": "prune",
      "detail": "Prune all unused images, networks, and volumes.",
      "type": "shell",
      "command": "docker system prune -f && docker volume prune -f"
    },
    {
      "label": "down",
      "detail": "Stop the service in Docker.",
      "type": "shell",
      "command": "docker compose down --remove-orphans"
    },
    {
      "label": "stats",
      "detail": "View live Docker stats.",
      "type": "shell",
      "command": "docker stats"
    }
  ],
  "inputs": [
    {
      "type": "pickString",
      "id": "env",
      "description": "Which model should I train?",
      "options": ["source", "mind", "heart", "soul", "core", "toe"]
    },
    {
      "type": "pickString",
      "id": "i",
      "description": "Which task should I execute?",
      "options": [
        "i.crawl()",
        "i.fetch_from_reddit()",
        "i.prepare_discord_messages()",
        "i.fetch_from_discord()",
        "i.juxtapose_data()",
        "i.create_evil()",
        "i.fetch_from_matrix()",
        "i.compile_book()"
      ]
    },
    {
      "type": "pickString",
      "id": "ship",
      "description": "Which ship should I enter?",
      "options": ["bot", "ctx", "dash", "ipfs", "pet"]
    }
  ]
}
